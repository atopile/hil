from "generics/filters.ato" import LowPassFilter
from "generics/opamps.ato" import Opamp
from "generics/diodes.ato" import TVSDiode
from "generics/interfaces.ato" import Power, I2C, Pair
from "generics/resistors.ato" import Resistor

from "components/texas_instruments_lm358d_r.ato" import Texas_Instruments_LM358DR
from "components/mcp4725.ato" import MCP4725A0T
from "components/born_smbj26a.ato" import BORN_SMBJ26A

module AnalogOut:
    power_in = new Power
    power_3v3 = new Power
    i2c = new I2C
    output = new Pair

    # Components
    dac = new MCP4725A0T
    filter = new LowPassFilter
    amplifier = new Amplifier
    tvs = new TVS

    # Connections
    i2c ~ dac.i2c
    dac.output ~ filter.input
    filter.output ~ amplifier.input
    amplifier.output ~ tvs.input
    tvs.output ~ output

    # Power
    power_3v3 ~ dac.power
    power_in ~ amplifier.power_in

    # Configure
    amplifier.gain = 10/3.3 +/- 2%
    filter.cutoff_frequency = 1kHz +/- 20%
    tvs.clamping_voltage = 30V +/- 20%

module Amplifier:
    """
    Amplifies the input signal by a given gain. 
    Uses a Non-Inverting Opamp and a feedback resistor divider.
    """
    power_in = new Power
    input = new Pair
    output = new Pair

    feedback_resistor = new Resistor
    input_resistor = new Resistor
    opamp = new Opamp

    feedback_resistor.package = "0402"
    input_resistor.package = "0402"
    feedback_resistor.resistance = 10kohm +/- 1%
    input_resistor.resistance = 10kohm +/- 1%
    opamp -> Texas_Instruments_LM358DR

    # Connections
    power_in ~ opamp.power
    input.io ~ opamp.non_inverting
    power_in.gnd ~ input_resistor.p1; input_resistor.p2 ~ opamp.inverting
    opamp.inverting ~ feedback_resistor.p1; feedback_resistor.p2 ~ opamp.output
    output.io ~ opamp.output

    # Common gnd
    power_in.gnd ~ input.gnd
    power_in.gnd ~ output.gnd

    # Parameters
    gain: dimensionless

    # # Configure the amplifier
    assert 1 + feedback_resistor.resistance / input_resistor.resistance is gain
    assert gain within max(output.voltage) / max(input.voltage)
    assert power_in.voltage * gain < opamp.supply_voltage # Ensure the opamp doesn't saturate


module TVS:
    """
    Clamps the output voltage to a given clamping voltage.
    """
    input = new Pair
    output = new Pair

    # Components
    diode = new TVSDiode
    diode -> BORN_SMBJ26A

    # Connections
    input ~ output
    input.io ~ diode.cathode
    input.gnd ~ diode.anode
